// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TogoleseAssociationSystem.IntegrationTests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CreateMember")]
    public partial class CreateMemberFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CreateMember.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "CreateMember", "As an admin user \r\nI want to create members through Togolese Associtation App\r\nSo" +
                    " that any member on the list can be displayed", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the admin user creates a member, then the newly created member is stored in " +
            "the database")]
        [NUnit.Framework.CategoryAttribute("tag1")]
        public void WhenTheAdminUserCreatesAMemberThenTheNewlyCreatedMemberIsStoredInTheDatabase()
        {
            string[] tagsOfScenario = new string[] {
                    "tag1"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the admin user creates a member, then the newly created member is stored in " +
                    "the database", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 8
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                            "ContributionName",
                            "Amount",
                            "DateOfContribution",
                            "IsAnnualContribution",
                            "MemberId"});
                table2.AddRow(new string[] {
                            "TestContribute",
                            "20",
                            "8/8/2024 12:00:00 AM",
                            "false",
                            ""});
#line 9
 testRunner.Given("the following contribution to associate with member exist", ((string)(null)), table2, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                            "Firstname",
                            "Surname",
                            "Address",
                            "Postcode",
                            "City",
                            "Telephone",
                            "Title",
                            "IsActive",
                            "IsChair",
                            "DateOfBirth",
                            "Nextofkin",
                            "Relationship",
                            "Photo",
                            "MembershipDate"});
                table3.AddRow(new string[] {
                            "TestName",
                            "DoeTest",
                            "34 Bentley road",
                            "BR3 1AS",
                            "Birmingham",
                            "07458893212",
                            "Mr",
                            "True",
                            "False",
                            "31-Jan-2000",
                            "Brenda",
                            "sister",
                            "0x",
                            "8/8/2024 12:00:00 AM"});
#line 12
 testRunner.When("the user creates a member with the following properties", ((string)(null)), table3, "When ");
#line hidden
#line 15
 testRunner.Then("an alert message indicating that the member with name \'Test\'was successfully crea" +
                        "ted is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "Firstname",
                            "Lastname",
                            "Address",
                            "Postcode",
                            "City",
                            "Telephone",
                            "Title",
                            "IsActive",
                            "IsChair",
                            "DateOfBirth",
                            "Nextofkin",
                            "Relationship",
                            "Photo",
                            "MembershipDate",
                            "MembershipContributions"});
                table4.AddRow(new string[] {
                            "TestName",
                            "DoeTest",
                            "34 Bentley road",
                            "BR3 1AS",
                            "Birmingham",
                            "07458893212",
                            "Miss",
                            "True",
                            "False",
                            "31-Jan-2000",
                            "Brenda",
                            "sister",
                            "0x",
                            "8/8/2024 12:00:00 AM",
                            "TestContribute"});
#line 16
  testRunner.And("the Member with the following properties is displayed on the list page", ((string)(null)), table4, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
